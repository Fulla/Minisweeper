{"version":3,"sources":["Reducers/game.js","Reducers/index.js","constants.js","serviceWorker.js","apiRequests.js","Actions/gameActions.js","Components/Board.js","Components/Button.js","store.js","Containers/Game.js","index.js"],"names":["initialState","board","files","columns","status","outside_board","x","y","state","combineReducers","game","action","newBoard","type","b","Array","map","item","fill","i","length","slice","num","safepoints","sfpoints","sf","file","column","mines","m","activ","activated","Boolean","window","location","hostname","match","makeRequest","url","request","headers","Headers","fetch","then","response","json","startBoard","setSafePoints","setMines","setActivatedMine","setStatus","startGame","f","c","dispatch","method","body","JSON","stringify","res","data","gameState","console","log","resumeGame","safePoints","activatedMine","discoverTile","Board","renderCells","n","row","cell","index","key","className","onClick","props","discover","renderRows","table","this","React","Component","Button","title","Game","gameActions","filesChange","e","val","parseInt","target","value","setState","columnsChange","minesChange","onChange","connect","bindActionCreators","GameActions","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a904fa1d.chunk.js","sourcesContent":["import { START_BOARD, SET_SAFEPOINTS, SET_MINES, SET_ACTIVATED, SET_STATUS } from '../constants';\n\nconst initialState = {\n  board: null,\n  files: 0,\n  columns: 0,\n  status: \"off\",\n}\n\nfunction outside_board(x, y, state) {\n  return x >= state.files || y >= state.columns || x < 0 || y < 0\n}\n\nexport default function authors(state = initialState, action) {\n  let newBoard = [];\n  switch (action.type) {\n    case START_BOARD:\n      let b = [...Array(action.files)].map(item => Array(action.columns).fill(\"\")) \n      return {\n        ...state,\n        board: b,\n        files: action.files,\n        columns: action.columns,\n        status: action.state,\n      }\n    case SET_SAFEPOINTS:\n      newBoard = []\n      for (var i = 0; i < state.board.length; i++) {\n        newBoard[i] = state.board[i].slice();\n      } \n      for (let num in action.safepoints) {\n        let sfpoints = action.safepoints[num]\n        for (let sf of sfpoints) {\n          if (outside_board(sf.file, sf.column, state)) {\n            continue\n          }\n          newBoard[sf.file][sf.column] = num\n        }\n      }\n      return {\n        ...state,\n        board: newBoard,\n      }\n    case SET_MINES:\n      newBoard = []\n      for (var i = 0; i < state.board.length; i++) {\n        newBoard[i] = state.board[i].slice();\n      }\n      for (let m of action.mines) {\n        if (outside_board(m.file, m.column, state)) {\n          continue\n        }\n        newBoard[m.file][m.column] = \"*\"\n      }\n      return {\n        ...state,\n        board: newBoard,\n      }\n    case SET_ACTIVATED:\n      let activ = action.activated\n      if (activ == null) {\n        return state\n      }\n      if (outside_board(activ.file, activ.column, state)) {\n        return state\n      }\n      newBoard = [];\n      for (var i = 0; i < state.board.length; i++) {\n        newBoard[i] = state.board[i].slice();\n      }\n      newBoard[activ.file][activ.column] = \"X\"\n      return {\n        ...state,\n        board: newBoard,\n      }\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.state\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\n\nimport game from './game';\n\nexport default combineReducers({\n  game\n});","export const SET_SAFEPOINTS = 'SET_SAFEPOINTS';\nexport const START_BOARD = 'START_BOARD';\nexport const SET_MINES = 'SET_MINES';\nexport const SET_ACTIVATED = 'SET_ACTIVATED';\nexport const SET_STATUS = 'SET_STATUS';\n\nexport const BASE_URL = '/api';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { BASE_URL } from './constants';\n\nfunction makeRequest(url, request) {\n  request.headers = new Headers({\n    'Content-Type': 'application/json'\n  })\n  return fetch(`${BASE_URL}/${url}`, request)\n  .then(\n      (response) => response.json()\n  )\n}\n\nexport function fetchGameState() {\n  let request = {\n    method: 'GET'\n  }\n  return makeRequest('resume', request)\n  .then(\n    (res) => res.data\n  )\n}\n\n\nexport function fetchStartGame(files, columns, mines) {\n\tlet request = {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tfiles,\n\t\t\tcolumns,\n\t\t\tmines\n    })\n\t}\n\treturn makeRequest('new', request)\n\t.then(\n\t\t(res) => res.data\n\t)\n}\n\nexport function fetchDiscoverTile(file, column) {\n\tlet request = {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tfile,\n\t\t\tcolumn,\n    })\n\t}\n\treturn makeRequest('discover', request)\n\t.then(\n\t\t(res) => res.data\n\t)\n}","import { SET_SAFEPOINTS, START_BOARD, SET_ACTIVATED, SET_MINES, SET_STATUS } from '../constants';\nimport { fetchGameState, fetchStartGame, fetchDiscoverTile } from '../apiRequests';\n\n// sync actions\n\nfunction startBoard(files, columns, state) {\n  return {\n    type: START_BOARD,\n\t\tfiles,\n\t\tcolumns,\n\t\tstate,\n  }\n}\n  \nfunction setSafePoints(safepoints) {\n  return {\n    type: SET_SAFEPOINTS,\n    safepoints\n  }\n}\n\nfunction setMines(mines) {\n  return {\n    type: SET_MINES,\n    mines\n  }\n}\n\nfunction setActivatedMine(activated) {\n  return {\n    type: SET_ACTIVATED,\n    activated\n  }\n}\n\nfunction setStatus(state) {\n  return {\n    type: SET_STATUS,\n    state\n  }\n}\n\n// thunk actions\n\n\nexport function startGame(f, c, m) {\n\n  return (dispatch) => {\n    \n    return fetchStartGame(f, c, m)\n    .then(\n      (gameState) => {\n\t\t\t\tconsole.log(gameState)\n        dispatch(startBoard(gameState.files, gameState.columns, gameState.state))\n      }\n    )\n  }\n}\n\n\nexport function resumeGame() {\n\n  return (dispatch) => {\n    \n    return fetchGameState()\n    .then(\n      (gameState) => {\n\t\t\t\tconsole.log(gameState)\n        dispatch(startBoard(gameState.files, gameState.columns, gameState.state))\n\t\t\t\tdispatch(setSafePoints(gameState.safePoints))\n\t\t\t\tdispatch(setMines(gameState.mines))\n\t\t\t\tdispatch(setActivatedMine(gameState.activatedMine))\n\t\t\t\tdispatch(setStatus(gameState.state))\n      }\n    )\n  }\n}\n\n\nexport function discoverTile(x, y) {\n\n  return (dispatch) => {\n    \n    return fetchDiscoverTile(x, y)\n    .then(\n      (gameState) => {\n\t\t\t\tconsole.log(gameState)\n\t\t\t\tdispatch(setSafePoints(gameState.safePoints))\n\t\t\t\tdispatch(setMines(gameState.mines))\n\t\t\t\tdispatch(setActivatedMine(gameState.activatedMine))\n\t\t\t\tdispatch(setStatus(gameState.state))\n      }\n    )\n  }\n}","import React from 'react';\n\nimport '../App.css';\n\nclass Board extends React.Component {\n    state = {}\n\n    renderCells = (n, row) => {\n\t\t\treturn row.map((cell, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<td key={index} className=\"Tile\" onClick={() => this.props.discover(n, index)}>{cell}</td>\n\t\t\t\t\t)\n\t\t\t\t})\n    }\n\t\t\n\t\trenderRows = (table) => {\n\t\t\treturn table.map((row, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t{this.renderCells(index, row)}\n\t\t\t\t\t\t</tr>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n    render() {\n\t\t\tconst { board } = this.props\n            \n\t\t\treturn (\n\t\t\t\t<div className=\"Container\">\n\t\t\t\t\t{ board != null && (\n\t\t\t\t\t\t<table className=\"Table\">\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{this.renderRows(board)}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n}\n\nexport default Board;","import React from 'react';\nimport '../App.css';\n\nfunction Button(props) {\n  return <div className=\"Button\" onClick={props.action}>{props.title}</div>;\n}\n\nexport default Button;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport reducer from './Reducers';\n\nexport default (initialState) => createStore(reducer, initialState, applyMiddleware(thunk));","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as GameActions from '../Actions/gameActions';\nimport '../App.css';\nimport Board from '../Components/Board';\nimport Button from '../Components/Button';\n\nclass Game extends React.Component {\n    state = {\n\t\t\tfiles: 5,\n\t\t\tcolumns: 5,\n\t\t\tmines: 5,\n\t\t}\n\n\t\tstartGame = () => {\n\t\t\tconst { files, columns, mines } = this.state\n\t\t\tthis.props.gameActions.startGame(files, columns, mines)\n\t\t}\n\n\t\tfilesChange = (e) => {\n\t\t\tlet val = parseInt(e.target.value)\n\t\t\tif (val < 1 || val > 50) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.setState({files: val})\n\t\t}\n\n\t\tcolumnsChange = (e) => {\n\t\t\tlet val = parseInt(e.target.value)\n\t\t\tif (val < 1 || val > 50) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.setState({columns: val})\n\t\t}\n\n\t\tminesChange = (e) => {\n\t\t\tlet val = parseInt(e.target.value)\n\t\t\tlet {files, columns} = this.state\n\t\t\tif (val < 1 || val > files * columns) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.setState({mines: val})\n\t\t}\n\n    render() {\n\t\t\tconst { board, status } = this.props.game\n\t\t\tconst { resumeGame, discoverTile } = this.props.gameActions\n\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h2>Minesweeper</h2>\n\t\t\t\t\t{ status === \"game over\" && <h3>Game Over!!!</h3>}\n\t\t\t\t\t{ status === \"win\" && <h3>You Win!!!</h3>}\n\t\t\t\t\t<Board board={board} discover={discoverTile}/>\n\t\t\t\t\t<div className=\"Params\">\n\t\t\t\t\t\t<label className=\"Label\">Files:\n\t\t\t\t\t\t\t<input type=\"number\" onChange={this.filesChange} value={this.state.files} className=\"Input\"/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label className=\"Label\">Columns:\n\t\t\t\t\t\t<input type=\"number\" onChange={this.columnsChange} value={this.state.columns} className=\"Input\"/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label className=\"Label\">Mines:\n\t\t\t\t\t\t\t<input type=\"number\" onChange={this.minesChange} value={this.state.mines} className=\"Input\"/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Buttons\">\n\t\t\t\t\t\t<Button title=\"New game\" action={this.startGame}/>\n\t\t\t\t\t\t<Button title=\"Resume game\" action={resumeGame}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n}\n\nexport default connect(\n  state => ({\n    game: state.game,\n  }),\n  dispatch => ({\n    gameActions: bindActionCreators(GameActions, dispatch),\n  })\n)(Game)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport Game from './Containers/Game';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Game />\n    </Provider>, document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}